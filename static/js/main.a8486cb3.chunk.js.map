{"version":3,"sources":["components/wavingTextComponent/WaveyText.js","components/typingTextComponent/Typing.js","components/wavingTextComponentWithAnimeJs/WavingText.js","components/typingComponentWithAnimeJs/Type.js","components/coolThreeDText/ThreeDeeText.js","App.js","serviceWorker.js","index.js"],"names":["WaveyText","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleLetterMap","tempArr","i","state","text","length","push","substring","setState","charArr","console","log","rippleWord","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","value","err","return","word","rippleText","react_default","a","createElement","className","map","index","key","Component","Typing","makeArr","temp","fullword","arr","animateBorder","typing","$","css","typeBackward","idx","forward","backward","setTimeout","speed","typeForward","typeWord","c","wordToType","id","WavingText","createArr","bounceLetters","childNodeList","anime","targets","keyframes","translateY","autoplay","delay","stagger","loop","easing","backgroundColor","color","containerRef","React","createRef","spanRef","bind","assertThisInitialized","refArr","wavingWord","arrRefs","current","animeRef","_this2","ref","letter","inp","Type","txt","wordArr","backSpace","direction","divRef","opacity","scale","ThreeDeeText","App","WaveyText_WaveyText","Typing_Typing","WavingText_WavingText","Type_Type","ThreeDeeText_ThreeDeeText","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a8486cb3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\n// import './WaveyText.css';\r\nimport './WaveyText.scss';\r\nexport default class WaveyText extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: this.props.rippleText,\r\n            charArr: [],\r\n            word: []\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.handleLetterMap();\r\n    }\r\n\r\n    handleLetterMap = () => {\r\n        let tempArr = [];\r\n        // for(let char of this.state.text) {\r\n        //     // tempArr = [tempArr, char];\r\n        //     tempArr.push(char);\r\n        // }\r\n        for(let i = 0; i < this.state.text.length; i++) {\r\n          tempArr.push(this.state.text.substring(i,i+1))\r\n        }\r\n        this.setState({\r\n            charArr: tempArr\r\n        },() => {\r\n                console.log(\"THIS.STATE.TEXT: \" + this.state.text);\r\n                console.log(\"TEMP ARR: \" + tempArr)\r\n                console.log(\"THIS.STATE.CHARARR: \" + this.state.charArr);\r\n            //     let rippleWord = this.state.charArr.map((c) => {\r\n            //         return(\r\n            //             <span className=\"waveChar\" id={c} key={c}>{c}</span>\r\n            //         )\r\n            // });\r\n            let rippleWord = [];\r\n            for(let i of this.state.charArr) {\r\n                // rippleWord = [...rippleWord, i];\r\n                rippleWord.push(i);\r\n            }\r\n            console.log(\"RIPPLEWORD: \" + rippleWord);\r\n            this.setState({\r\n                word: rippleWord\r\n            });\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"rideTheWave\">\r\n                {\r\n                    this.state.word.map((i,index) =>\r\n                        {\r\n                            return(\r\n                                <span key={index} className=\"waveChar\">{i}</span>\r\n                            )\r\n                        }\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport $ from 'jquery';\r\n\r\nimport './Typing.css';\r\n\r\n\r\nexport default class Typing extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fullword: this.props.wordToType,\r\n      arr: [],\r\n      typing: false,\r\n      backward: false,\r\n      forward: false,\r\n      speed: 150\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.makeArr();\r\n    this.setState({\r\n      backward: true\r\n    }, () => {\r\n      console.log(\"begin!\");\r\n    })\r\n  }\r\n\r\n\r\n  makeArr = () => {\r\n    let temp = [];\r\n    for(let i = 0; i < this.state.fullword.length; i++) {\r\n      temp.push(this.state.fullword.substring(i,i+1));\r\n    }\r\n    this.setState({\r\n      arr: temp\r\n    }, ()=> {\r\n      console.log(this.state.arr);\r\n    })\r\n  }\r\n\r\n  animateBorder = () => {\r\n    if(this.state.typing === true) {\r\n      $('#typedTextDiv').css(\"animation\", \"none\");\r\n    }\r\n  }\r\n\r\n  typeBackward = (idx) => {\r\n    if(idx === -1) {\r\n      this.setState({\r\n        forward: true,\r\n        backward: false,\r\n      }, ()=> {\r\n        return 0;\r\n      })\r\n    }\r\n    else {\r\n      setTimeout(()=> {\r\n        $(\"#\"+idx).css(\"display\", \"none\");\r\n        console.log(\"Backward:\" + idx);\r\n        this.typeBackward(idx-1);\r\n      }, this.state.speed)\r\n    }\r\n  }\r\n\r\n  typeForward = (idx) => {\r\n    if(idx === this.state.arr.length) {\r\n      setTimeout(()=> {\r\n        this.setState({\r\n          backward: true,\r\n          forward: false\r\n        }, ()=> {\r\n          return this.state.arr.length-1;\r\n        })\r\n      }, 2000)\r\n    }\r\n    else {\r\n      setTimeout(()=> {\r\n        $(\"#\"+idx).css(\"display\", \"inline\");\r\n        console.log(\"Forward: \"+ idx);\r\n        this.typeForward(idx+1);\r\n      }, this.state.speed)\r\n    }\r\n  }\r\n\r\n  typeWord = () => {\r\n    let c = this.state.arr.length-1;\r\n    // this.typeBackward(c);\r\n    // setTimeout(()=> {\r\n    //   this.typeForward(0);\r\n    // },500*this.state.arr.length+100)\r\n    if(this.state.backward) {\r\n      this.typeBackward(c);\r\n    }\r\n    if(this.state.forward) {\r\n      this.typeForward(0);\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    this.animateBorder();\r\n    ///\r\n    this.typeWord();\r\n\r\n    ///\r\n    return (\r\n        <div id=\"typedTextDiv\">\r\n          {\r\n            this.state.arr.map((i,index) => {\r\n              return <span key={index} id={\"\"+index} className='letters'>{i}</span>\r\n            })\r\n          }\r\n\r\n        </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './WavingText.css';\r\n\r\nimport anime from 'animejs';\r\n\r\n\r\nexport default class WavingText extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.containerRef = React.createRef();\r\n    this.spanRef = React.createRef();\r\n    this.bounceLetters = this.bounceLetters.bind(this);\r\n    this.refArr = [];\r\n    this.state = {\r\n      word: this.props.wavingWord,\r\n      arr: [],\r\n      arrRefs: []\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.createArr();\r\n    console.log(this.containerRef.current);\r\n  }\r\n\r\n  createArr = () => {\r\n    let temp = [];\r\n    for(let i = 0; i < this.state.word.length; i++) {\r\n      temp.push(this.state.word.substring(i, i+1));\r\n    }\r\n    this.setState({\r\n      arr: temp\r\n    }, ()=> {\r\n      console.log('done!');\r\n    })\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.animeRef = anime({\r\n      targets: this.refArr,\r\n      keyframes: [{translateY: -90}, {translateY: 30}, {translateY: 0}],\r\n      autoplay: true,\r\n      delay: anime.stagger(50),\r\n      //delay: anime.stagger(100, {from: 'center'}),\r\n      // delay: (el, i) => {\r\n      //   return 50*i\r\n      // },\r\n      loop: true,\r\n      easing: 'easeInOutSine',\r\n      backgroundColor: {\r\n        value: ['#000', '#FFF'],\r\n        easing: 'easeInOutSine'\r\n      },\r\n      color: {\r\n        value: ['#FFF', '#000'],\r\n        easing: 'easeInOutSine'\r\n      },\r\n      // direction: 'alternate',\r\n    });\r\n  }\r\n\r\n  bounceLetters = (childNodeList) => {\r\n    anime({\r\n      targets: childNodeList,\r\n      keyframes: [{translateY: -90}, {translateY: 0}],\r\n      autoplay: true,\r\n      delay: anime.stagger(50),\r\n      //delay: anime.stagger(100, {from: 'center'}),\r\n      // delay: (el, i) => {\r\n      //   return 50*i\r\n      // },\r\n      loop: true,\r\n      easing: 'easeInOutSine',\r\n      backgroundColor: {\r\n        value: ['#000', '#FFF'],\r\n        easing: 'easeInOutSine'\r\n      },\r\n      color: {\r\n        value: ['#FFF', '#000'],\r\n        easing: 'easeInOutSine'\r\n      },\r\n      // direction: 'alternate',\r\n    });\r\n  }\r\n\r\n\r\n  render() {\r\n    return(\r\n      <div id='textContainer' ref={this.containerRef}>\r\n      {\r\n        this.state.arr.map((letter, index) => {\r\n          return (\r\n            <span ref={(inp) => {this.refArr.push(inp); console.log(inp);}} className=\"bouncyLetters\" key={index}>{letter}</span>\r\n          )\r\n        })\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport './Type.css';\r\n\r\nimport anime from 'animejs';\r\n\r\nexport default class Type extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.arr = [];\r\n    this.divRef = React.createRef();\r\n      this.state = {\r\n        txt: this.props.word,\r\n        wordArr: []\r\n      }\r\n  }\r\n\r\n\r\n  componentDidMount() {\r\n    this.makeArr();\r\n  }\r\n  componentDidUpdate() {\r\n    this.animeRef = anime({\r\n      targets: this.arr,\r\n      delay: anime.stagger(200),\r\n      autoplay: true,\r\n      loop: true,\r\n      translateY: {\r\n        value: [-10,0],\r\n        easing: 'spring(1, 100, 5, 0)'\r\n      },\r\n      opacity: {\r\n        value: 1,\r\n        easing: 'spring(1, 100, 10, 0)'\r\n      },\r\n      scale: {\r\n        value: 1.05,\r\n        easing: 'spring(1, 100, 10, 0)'\r\n      },\r\n      easing: 'spring',\r\n      direction: 'alternate',\r\n    })\r\n  }\r\n\r\n  makeArr = () => {\r\n    let tempArr = [];\r\n    for(let i = 0; i < this.state.txt.length; i++) {\r\n      tempArr.push(this.state.txt.substring(i, i+1));\r\n    }\r\n    this.setState({\r\n      wordArr: tempArr\r\n    }, ()=> {\r\n      console.log('done!');\r\n    })\r\n  }\r\n\r\n  backSpace = () => {\r\n    this.animeRef = anime({\r\n      targets: this.arr,\r\n      direction: 'reverse',\r\n      delay: anime.stagger(20),\r\n      autoplay: true,\r\n      loop: true,\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id=\"typeContainer\" ref={this.divRef}>\r\n        {\r\n          this.state.wordArr.map((i, index) => {\r\n            return(<span key={index+\"\"} ref={(inp) => {this.arr.push(inp);}} className=\"typeLetters\">{i}</span>)\r\n          })\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './ThreeDeeText.css';\r\n\r\nimport anime from 'animejs';\r\n\r\nexport default class ThreeDeeText extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.arr = [];\r\n    this.state = {\r\n      txt: this.props.word,\r\n      wordArr: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.makeArr();\r\n  }\r\n\r\n  makeArr = () => {\r\n    let tempArr = [];\r\n    for(let i = 0; i < this.state.txt.length; i++) {\r\n      tempArr.push(this.state.txt.substring(i, i+1));\r\n    }\r\n    this.setState({\r\n      wordArr: tempArr\r\n    }, ()=> {\r\n      console.log('done!');\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return(\r\n      <div id=\"box\">\r\n      {\r\n        this.state.wordArr.map((i, index) => {\r\n          return(<span key={index+\"\"} ref={(inp) => {this.arr.push(inp);}} className=\"letters\">{i}</span>)\r\n        })\r\n      }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react';\n\n\nimport WaveyText from './components/wavingTextComponent/WaveyText.js';\nimport Typing from './components/typingTextComponent/Typing.js';\nimport WavingText from './components/wavingTextComponentWithAnimeJs/WavingText.js';\nimport Type from './components/typingComponentWithAnimeJs/Type.js';\nimport ThreeDeeText from './components/coolThreeDText/ThreeDeeText.js';\nimport './App.css';\n\n\n\nclass App extends Component {\n  render() {\n    let text = \"Hello, World!\"\n    return (\n      <div className=\"App\">\n        <WaveyText rippleText={text}/>\n        <Typing wordToType={text}/>\n        <WavingText wavingWord={text} />\n        <Type word={text}/>\n        // <ThreeDeeText word={text}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}